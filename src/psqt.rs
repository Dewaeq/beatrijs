use crate::defs::{Eval, Score, NUM_PIECES, NUM_SQUARES};
use crate::e;

#[rustfmt::skip]
const PAWN_TABLE: [Eval; NUM_SQUARES] = [
    e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),
    e!(50, 35),     e!(50, 27),     e!(50, 22),     e!(50, 19),     e!(50, 21),     e!(50, 19),     e!(50, 24),     e!(50, 28),
    e!(10, 28),     e!(10, 17),     e!(20, 16),     e!(30, 11),     e!(30, 14),     e!(20, 14),     e!(10, 18),     e!(10, 22),
    e!(5, 23),      e!(5, 12),      e!(10, 13),     e!(25, 5),      e!(25, -2),     e!(10, 4),      e!(5, 14),      e!(5, 12),
    e!(0, 13),      e!(0, 9),       e!(0, -3),      e!(22, -7),     e!(22, -7),     e!(0, -8),      e!(0, 3),       e!(0, -1),
    e!(5, 4),       e!(-5, 7),      e!(-10, -6),    e!(0, 1),       e!(0, 0),       e!(-10, -5),    e!(-5, -1),     e!(5, -8),
    e!(5, 13),      e!(10, 8),      e!(10, 8),      e!(-30, 10),    e!(-35, 13),    e!(10, 0),      e!(10, 2),      e!(5, -7),
    e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),
];

#[rustfmt::skip]
const KNIGHT_TABLE: [Eval; NUM_SQUARES] = [
    e!(-50, -58),   e!(-40, -38),   e!(-30, -13),   e!(-30, -28),   e!(-30, -31),   e!(-30, -27),   e!(-40, -63),   e!(-50, -99),
    e!(-40, -25),   e!(-20, -8),    e!(0, -25),     e!(0, -2),      e!(0, -9),      e!(0, -25),     e!(-20, -24),   e!(-40, -52),
    e!(-30, -24),   e!(0, -20),     e!(10, 10),     e!(15, 9),      e!(15, -1),     e!(10, -9),     e!(0, -19),     e!(-30, -41),
    e!(-30, -17),   e!(5, 3),       e!(15, 22),     e!(20, 22),     e!(20, 22),     e!(15, 11),     e!(5, 8),       e!(-30, -18),
    e!(-30, -18),   e!(0, -6),      e!(15, 16),     e!(20, 25),     e!(20, 16),     e!(15, 17),     e!(0, 4),       e!(-30, -18),
    e!(-30, -23),   e!(5, -3),      e!(10, -1),     e!(15, 15),     e!(15, 10),     e!(10, -3),     e!(5, -20),     e!(-30, -22),
    e!(-40, -42),   e!(-20, -20),   e!(0, -10),     e!(5, -5),      e!(5, -2),      e!(0, -20),     e!(-20, -23),   e!(-40, -44),
    e!(-50, -29),   e!(-40, -51),   e!(-30, -23),   e!(-30, -15),   e!(-30, -22),   e!(-30, -18),   e!(-40, -50),   e!(-50, -64),
];

#[rustfmt::skip]
const BISHOP_TABLE: [Eval; NUM_SQUARES] = [
    e!(-20, -14),   e!(-10, -21),   e!(-10, -11),   e!(-10, -8),    e!(-10, -7),    e!(-10, -9),    e!(-10, -17),   e!(-20, -24),
    e!(-10, -8),    e!(0, -4),      e!(0, 7),       e!(0, -12),     e!(0, -3),      e!(0, -13),     e!(0, -4),      e!(-10, -14),
    e!(-10, 2),     e!(0, -8),      e!(5, 0),       e!(10, -1),     e!(10, -2),     e!(5, 6),       e!(0, 0),       e!(-10, 4),
    e!(-10, -3),    e!(5, 9),       e!(5, 12),      e!(10, 9),      e!(10, 14),     e!(5, 10),      e!(5, 3),       e!(-10, 2),
    e!(-10, -6),    e!(0, 3),       e!(10, 13),     e!(10, 19),     e!(10, 7),      e!(10, 10),     e!(0, -3),      e!(-10, -9),
    e!(-10, -12),   e!(10, -3),     e!(10, 8),      e!(10, 10),     e!(10, 13),     e!(10, 3),      e!(10, -7),     e!(-10, -15),
    e!(-10, -14),   e!(5, -18),     e!(0, -7),      e!(0, -1),      e!(0, 4),       e!(0, -9),      e!(5, -15),     e!(-10, -27),
    e!(-20, -23),   e!(-10, -9),    e!(-10, -23),   e!(-10, -5),    e!(-10, -9),    e!(-10, -16),   e!(-10, -5),    e!(-20, -17),
];

#[rustfmt::skip]
const ROOK_TABLE: [Eval; NUM_SQUARES] = [
    e!(0, 13),      e!(0, 10),      e!(0, 18),      e!(0, 15),      e!(0, 12),      e!(0, 12),      e!(0, 8),       e!(0, 5),
    e!(5, 11),      e!(10, 13),     e!(10, 13),     e!(10, 11),     e!(10, -3),     e!(10, 3),      e!(10, 8),      e!(5, 3),
    e!(-5, 7),      e!(0, 7),       e!(0, 7),       e!(0, 5),       e!(0, 4),       e!(0, -3),      e!(0, -5),      e!(-5, -3),
    e!(-5, 4),      e!(0, 3),       e!(0, 13),      e!(0, 1),       e!(0, 2),       e!(0, 1),       e!(0, -1),      e!(-5, 2),
    e!(-5, 3),      e!(0, 5),       e!(0, 8),       e!(0, 4),       e!(0, -5),      e!(0, -6),      e!(0, -8),      e!(-5, -11),
    e!(-5, -4),     e!(0, 0),       e!(0, -5),      e!(0, -1),      e!(0, -7),      e!(0, -12),     e!(0, -8),      e!(-5, -16),
    e!(-5, -6),     e!(0, -6),      e!(0, 0),       e!(0, 2),       e!(0, -9),      e!(0, -9),      e!(0, -11),     e!(-5, -3),
    e!(0, -9),      e!(0, 2),       e!(0, 3),       e!(5, -1),      e!(5, -5),      e!(0, -13),     e!(0, 4),       e!(0, -20),
];

#[rustfmt::skip]
const QUEEN_TABLE: [Eval; NUM_SQUARES] = [
    e!(-20, -9),     e!(-10, 22),     e!(-10, 22),     e!(-5, 27),      e!(-5, 27),      e!(-10, 19),     e!(-10, 10),     e!(-20, 20),
    e!(-10, -17),    e!(0, 20),       e!(0, 32),       e!(0, 41),       e!(0, 58),       e!(0, 25),       e!(0, 30),       e!(-10, 0),
    e!(-10, -20),    e!(0, 6),        e!(5, 9),        e!(5, 49),       e!(5, 47),       e!(5, 35),       e!(0, 19),       e!(-10, 9),
    e!(-5, 3),       e!(0, 22),       e!(5, 24),       e!(5, 45),       e!(5, 57),       e!(5, 40),       e!(0, 57),       e!(-5, 36),
    e!(0, -18),      e!(0, 28),       e!(5, 19),       e!(5, 47),       e!(5, 31),       e!(5, 34),       e!(0, 39),       e!(-5, 23),
    e!(-10, -16),    e!(5, -27),      e!(5, 15),       e!(5, 6),        e!(5, 9),        e!(5, 17),       e!(0, 10),       e!(-10, 5),
    e!(-10, -22),    e!(0, -23),      e!(5, -30),      e!(0, -16),      e!(0, -16),      e!(0, -23),      e!(0, -36),      e!(-10, -32),
    e!(-20, -33),    e!(-10, -28),    e!(-10, -22),    e!(-5, -43),     e!(-5, -5),      e!(-10, -32),    e!(-10, -20),    e!(-20, -41),
];

#[rustfmt::skip]
const KING_TABLE: [Eval; NUM_SQUARES] = [
    e!(-30, -50),   e!(-40, -40),   e!(-40, -30),   e!(-50, -20),   e!(-50, -20),   e!(-40, -30),   e!(-40, -40),   e!(-30, -50),
    e!(-30, -30),   e!(-40, -20),   e!(-40, -10),   e!(-50, 0),     e!(-50, 0),     e!(-40, -10),   e!(-40, -20),   e!(-30, -30),
    e!(-30, -30),   e!(-40, -10),   e!(-40, 20),    e!(-50, 30),    e!(-50, 30),    e!(-40, 20),    e!(-40, -10),   e!(-30, -30),
    e!(-30, -30),   e!(-40, -10),   e!(-40, 30),    e!(-50, 40),    e!(-50, 40),    e!(-40, 30),    e!(-40, -10),   e!(-30, -30),
    e!(-20, -30),   e!(-30, -10),   e!(-30, 30),    e!(-40, 40),    e!(-40, 40),    e!(-30, 30),    e!(-30, -10),   e!(-20, -30),
    e!(-10, -30),   e!(-20, -10),   e!(-20, 20),    e!(-20, 30),    e!(-20, 30),    e!(-20, 20),    e!(-20, -10),   e!(-10, -30),
    e!(20, -30),    e!(20, -30),    e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(0, 0),       e!(20, -30),    e!(20, -30),
    e!(20, -50),    e!(30, -30),    e!(10, -30),    e!(0, -30),     e!(0, -30),     e!(10, -30),    e!(30, -30),    e!(20, -50),
];

pub const PIECE_TABLE: [[Eval; NUM_SQUARES]; NUM_PIECES] = [
    PAWN_TABLE,
    KNIGHT_TABLE,
    BISHOP_TABLE,
    ROOK_TABLE,
    QUEEN_TABLE,
    KING_TABLE,
];
